% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/renv.R
\name{renv_switch_r_version}
\alias{renv_switch_r_version}
\title{Switch between R versions in renv projects}
\usage{
renv_switch_r_version(
  version = NULL,
  update_packages = FALSE,
  snapshot = FALSE
)
}
\arguments{
\item{version}{\verb{[character]}\cr
The R version to upgrade to.}

\item{update_packages}{\verb{[logical]}\cr
Whether to update all packages to the new RSPM snapshot via
\code{renv::update()}.}

\item{snapshot}{\verb{[logical]}\cr
Whether to call \code{renv::snapshot()} after all packages have been updated.}
}
\value{
TRUE (invisibly)
}
\description{
This function switches between R versions in renv projects
which follow the 'cynkra RSPM snapshot' logic.
This means that each R version is tied to a specific RSPM snapshot.

The function executes the following tasks:
\itemize{
\item Replace the R Version in \code{renv.lock}.
\item Replace the RSPM snapshot in \code{renv.lock} with the one associated with the
selected R Version.
\item (optional) execution of \code{renv::update()}.
\item (optional) execution of \code{renv::snapshot()}.
}
}
\details{
When downgrading, the optional calls to \code{renv::update()} and
\code{renv::snapshot()} will not be executed
(even if specified via their arguments.)
Currently there is no easy way to downgrade all packages in renv projects
to a specific RSPM snapshot.
This should be a niche case anyhow and it is unclear if this will ever be
supported.
Note that this is different from restoring packages with {renv} per se for
which \code{renv::restore()} should be used.
}
\examples{
\dontrun{
renv_switch_r_version("4.0.4")
}
}
\seealso{
get_snapshots
}
